---
import Layout from '../layouts/Feature.astro'

import getMeta from '../data/meta'
import allProjects from '../data/projects.json'
import LinkBlock from '../components/LinkBlock.astro'
import Feature from '../components/Feature.astro'
import { getCollection } from 'astro:content'

import { slugSegments} from '@/lib/pages'

const blogCollections = await Promise.all([
  getCollection('talks'),
  getCollection('blog-md'),
  getCollection('blog-ipynb'),
])

const collection = blogCollections.flat()
const blog = collection
  .filter((p) => p.data.published !== false)
  .sort((a, b) =>
    new Date(a.data.subtitle).getTime() - new Date(b.data.subtitle).getTime() >
    0
      ? -1
      : 1
  )

const meta = getMeta()

interface Props {
  count?: number
  omit?: number
}

const withExcluded = blog.filter((_, i) => i !== Astro.props.omit)

const hasSidebar = Astro.slots.has('sidebar')

const posts = withExcluded.slice(0, Astro.props.count || 6)
---

<Layout>
  <section slot="feature">
    <slot name="default" />
  </section>
  {
    hasSidebar ? (
      <section slot="sidebar">
        <slot name="sidebar" />
      </section>
    ) : (
      <aside slot="sidebar">
        <h3>Recent Posts</h3>
        {posts.map((post) => (
          <LinkBlock
            title={post.data.title}
            description={post.data.description}
            subtitle={post.data.subtitle}
            link={`/${slugSegments[post.collection]}/${post.id.split('.')[0]}`}
          />
        ))}
      </aside>
    )
  }
  <slot slot="extra" name="extra" />
</Layout>
