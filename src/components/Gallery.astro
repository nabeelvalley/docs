---
import imageSize from 'image-size'

const { path } = Astro.props
const start = `/public/photography/${path}`
const paths = await Astro.glob('/public/photography/**/*')

const imagePaths = paths.filter((p) => {
  const src = p.default
  console.log({ src })
  return src.startsWith(start)
})

const imageTasks = imagePaths.map(async (path) => {
  const src = path.default as string
  const parts = src.split('/')
  const alt = parts[parts.length - 1].split('.')[0]

  // `.` needed to ensure path is relative since glob retuns it as `/public/...`
  const size = imageSize(`.${src}`)

  return {
    ...size,
    src: src.replace('/public', ''),
    alt,
  }
})

const images = await Promise.all(imageTasks)
---

<div class="gallery__grid">
  {
    images
      .reverse()
      .map((image) => (
        <image
          {...image}
          class={
            image.height > image.width
              ? 'gallery__image gallery__image--vertical'
              : 'gallery__image gallery__image--horizontal'
          }
        />
      ))
  }
</div>
