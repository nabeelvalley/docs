---
import { readFile } from 'fs/promises'
import { format } from 'prettier'

import Snippet, { type Props as SnippetProps } from './Snippet.astro'

import Preview from './Preview.astro'
import { CSSPreview, type Props as CSSPreviewProps } from './CSSPreview'
import { Code } from 'astro-expressive-code/components'

type PreviewSize = 's' | 'm' | 'l'

interface Props extends Omit<SnippetProps, 'lang'> {
  size: PreviewSize
  /**
   * Variables configured as { '--name': config }
   */
  variables?: CSSPreviewProps['variables']
  html?: boolean
  htmlPath?: string
}

const sizes: Record<PreviewSize, [number, number]> = {
  l: [1, 2],
  m: [1, 1],
  s: [2, 1],
}

const {
  size = 'm',
  base = './src/snippets',
  path,
  variables,
  html: showHTML = true,
  htmlPath,
} = Astro.props

const [main, preview] = sizes[size]

const code = await readFile(`${base}/${path}`, 'utf-8')

const rawHTML = await Astro.slots.render('default')
const html = await (htmlPath
  ? readFile(`${base}/${htmlPath}`, 'utf-8')
  : format(rawHTML, { parser: 'html' }))
---

<Preview main={main} preview={preview}>
  <div class="snippets">
    <Snippet {...Astro.props} lang="css" />
    {showHTML ? <Code code={html} lang="html" /> : null}
  </div>
  <CSSPreview
    slot="preview"
    client:only="react"
    css={code}
    variables={variables || {}}
  >
    <div set:html={html} />
  </CSSPreview>
</Preview>

<style>
  .snippets {
    display: flex;
    flex-direction: column;
  }
</style>
